Utilizando ruby se compila por medio del interprete situado en #! /usr/bin...., mientras que irb es un interprete interactivo donde podemos escribir linea por linea e ir comprobando y depurando posibles errores

26. 

nil
:hello
nil
nil
nil
"changed"


27. Con el primero ya tenemos el programa cargado y llamamos al interprete es mas comodo para trabajar y el segundo directamente tienes que poner linea por linea todas las fases de tu programa, depuras errores pero debes escribirlo linea por linea


34.
2.1.1 :001 > "\t\n"
 => "\t\n" 
2.1.1 :003 > '\t\n'
 => "\\t\\n"


35.
2.1.1 :004 > %q{hello world\n}
 => "hello world\\n" 
2.1.1 :005 > %q{'a' 'b' 'c'}
 => "'a' 'b' 'c'" 
2.1.1 :006 > 


36.
2.1.1 :010 > %Q{hello world\n}
 => "hello world\n" 
2.1.1 :011 > %Q{'a' 'b' 'c'}
 => "'a' 'b' 'c'" 

37.
 => "--4--\n--2--\n" 

38.
"--\#{a}--\n--\#{b}--\n"

39.
[7] pry(main)> s[0,2]
=> "he"
[8] pry(main)> s[-1,1]
=> "o"
[9] pry(main)> s[0,10]
=> "hello"

40.
[21] pry(main)> g << "world"
=> "helloworld"

41.
[22] pry(main)> e = ','*3
=> ",,,"

42.
[25] pry(main)> "#{a=a+1} "*3
=> "2 2 2 "

43.
[27] pry(main)> %w[this is a text]
=> ["this", "is", "a", "text"]

44.
[28] pry(main)> %w[\t \n]
=> ["\\t", "\\n"]

45.
[29] pry(main)> %W[\t \n]
=> ["\t", "\n"]

46.
[30] pry(main)> nils = Array.new(3)
=> [nil, nil, nil]

47.
[33] pry(main)> zeros = Array.new(3,0)
=> [0, 0, 0]

48.
[36] pry(main)> x = [[1,2],[3,4]]
=> [[1, 2], [3, 4]]
[37] pry(main)> b = Array.new(x)
=> [[1, 2], [3, 4]]

49.
[38] pry(main)> c = Array.new(3) { |i| 2*i }
=> [0, 2, 4]

50.
[40] pry(main)> a = ('a'..'e').to_a
=> ["a", "b", "c", "d", "e"]
[41] pry(main)> a[1,1]
=> ["b"]
[42] pry(main)> a[-2,2]
=> ["d", "e"]
[43] pry(main)> a[0,2]
=> ["a", "b"]
[44] pry(main)> a[0..2]
=> ["a", "b", "c"]
[45] pry(main)> a[0...2]
=> ["a", "b"]
[46] pry(main)> a[-2,-1]
=> nil

































